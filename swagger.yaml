openapi: 3.0.0
info:
  title: Task API
  contact: {}
  version: '1.0'
servers:
  - url: https://vannguyen-taskapp.herokuapp.com/api/v1
    variables: {}
paths:
  /auth/register:
    post:
      tags:
        - Auth
      summary: Create User
      operationId: CreateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateUserRequest'
            example:
              username: myname1
              email: myemail1@gmail.com
              password: mypass
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/login:
    post:
      tags:
        - Auth
      summary: Login User
      operationId: LoginUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LoginUserRequest'
            example:
              email: myemail@gmail.com
              password: mypass
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/forgotPassword:
    post:
      tags:
        - Auth
      summary: Forgot Password
      description: Fill email. We will send link to you :)
      operationId: ForgotPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ForgotPasswordRequest'
            example:
              email: myemail@gmail.com
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /auth/resetPassword/{token}:
    parameters:
      - in: path
        name: token
        schema:
          type: string
        required: true
        description: The token
    patch:
      tags:
        - Auth
      summary: Reset Password
      description: Set new password
      operationId: ResetPassword
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordRequest'
            example:
              password: newpassword
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security: []
  /users/me:
    get:
      tags:
        - User
      summary: Get My Profile
      operationId: GetMyProfile
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - User
      summary: Update User
      operationId: UpdateUser
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUserRequest'
            example:
              username: updateHere
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - User
      summary: Delete User
      operationId: DeleteUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/me/avatar:
    post:
      tags:
        - User
      summary: Upload Avatar
      operationId: UploadAvatar
      parameters: []
      requestBody:
        content:
          application/x-www-form-urlencoded:
            encoding: {}
            schema:
              required:
                - avatar
              type: object
              properties:
                avatar:
                  type: string
        required: false
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    delete:
      tags:
        - User
      summary: Delete Avatar
      operationId: DeleteAvatar
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/logout:
    post:
      tags:
        - User
      summary: Logout User
      operationId: LogoutUser
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/logoutAll:
    post:
      tags:
        - User
      summary: Logout all
      operationId: Logoutall
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /tasks:
    post:
      tags:
        - Task
      summary: Create Task
      operationId: CreateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateTaskRequest'
            example:
              name: clean house 1
              completed: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    get:
      tags:
        - Task
      summary: Get All Tasks
      operationId: GetAllTasks
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /tasks/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The task ID
    get:
      tags:
        - Task
      summary: Get Task
      operationId: GetTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
    patch:
      tags:
        - Task
      summary: Update Task
      operationId: UpdateTask
      parameters: []
      requestBody:
        description: ''
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateTaskRequest'
            example:
              completed: false
        required: true
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []

    delete:
      tags:
        - Task
      summary: Delete Task
      operationId: DeleteTask
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
  /users/{id}:
    parameters:
      - in: path
        name: id
        schema:
          type: string
        required: true
        description: The user ID
    delete:
      tags:
        - Admin
      summary: Delete Any User By ID
      operationId: DeleteAnyUserByID
      parameters: []
      responses:
        '200':
          description: ''
          headers: {}
      deprecated: false
      security:
        - bearer: []
components:
  schemas:
    CreateUserRequest:
      title: CreateUserRequest
      required:
        - username
        - email
        - password
      type: object
      properties:
        username:
          type: string
        email:
          type: string
        password:
          type: string
      example:
        username: myname1
        email: myemail1@gmail.com
        password: mypass
    LoginUserRequest:
      title: LoginUserRequest
      required:
        - email
        - password
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      example:
        email: myemail@gmail.com
        password: mypass
    ForgotPasswordRequest:
      title: ForgotPasswordRequest
      required:
        - email
      type: object
      properties:
        email:
          type: string
      example:
        email: myemail@gmail.com
    ResetPasswordRequest:
      title: ResetPasswordRequest
      required:
        - password
      type: object
      properties:
        password:
          type: string
      example:
        password: newpassword
    UpdateUserRequest:
      title: UpdateUserRequest
      required:
        - username
      type: object
      properties:
        username:
          type: string
      example:
        username: updateHere
    CreateTaskRequest:
      title: CreateTaskRequest
      required:
        - name
        - completed
      type: object
      properties:
        name:
          type: string
        completed:
          type: boolean
      example:
        name: clean house 1
        completed: false
    UpdateTaskRequest:
      title: UpdateTaskRequest
      required:
        - completed
      type: object
      properties:
        completed:
          type: boolean
      example:
        completed: false
  securitySchemes:
    bearer:
      type: http
      scheme: bearer
security: []
tags:
  - name: Auth
  - name: User
  - name: Task
  - name: Admin
